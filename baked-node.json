{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "A bitcoin node",
  "Parameters": {
    "AZ": {
      "Type": "String",
      "Description": "the availability zone"
    },
    "Stage": {
      "Type": "String",
      "AllowedValues": [ "dev", "test", "staging", "prod" ]
    },
    "Mode": {
      "Type": "String",
      "AllowedValues": [ "AWSListener", "EdgeNode", "Webapp", "Explorer" ]
    },
    "BitcoinVersion": {
      "Type": "String",
      "AllowedValues": [ "v0dot12dot1" ]
    },
    "HostNickName": {
      "Type": "String",
      "Description": "a one-word nickname for this node"
    },
    "BitcoinNetwork": {
      "Type": "String",
      "Default": "main",
      "AllowedValues": [ "main", "testnet3", "segnet" ]
    },
    "BitcoinPort": {
      "Type": "Number",
      "Default": "8333"
    },
    "BitcoinRpcPort": {
      "Type": "Number",
      "Default": "8332"
    },
    "HashTxPort": {
      "Type": "Number",
      "Default": "28332"
    },
    "HashBlockPort": {
      "Type": "Number",
      "Default": "28333"
    },
    "RawTxPort": {
      "Type": "Number",
      "Default": "28334"
    },
    "RawBlockPort": {
      "Type": "Number",
      "Default": "28335"
    },
    "BitcoinCheckBlocks": {
      "Description": "See https://en.bitcoin.it/wiki/Running_Bitcoin#Command-line_arguments",
      "Type": "Number",
      "Default": "10"
    },
    "BitcoinRpcUser": {
      "Type": "String",
      "Default": "bitcoinrpc"
    },
    "BitcoinRpcPassword": {
      "Type": "String",
      "NoEcho": "true"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "InstanceType": {
      "Description": "Bitcoin Node Instance Type",
      "Type": "String",
      "Default": "t2.medium",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge"
      ]
    },
    "Snapshot": {
      "Type": "String",
      "Description": "The id of the snapshot to use; if omitted, a new empty volume will be created.",
      "Default": "NO_SNAPSHOT_ID"
    },
    "Subnet": {
      "Type": "AWS::EC2::Subnet::Id"
    },
    "VolumeSize": {
      "Default": "100",
      "Description": "Size of EBS volume",
      "Type": "Number",
      "MinValue": "100",
      "MaxValue": "300"
    },
    "VPC": {
      "Type": "AWS::EC2::VPC::Id"
    }
  },
  "Conditions": {
    "UseSnapshotCondition": {
      "Fn::Not": [ { "Fn::Equals": [{ "Ref": "Snapshot"}, "NO_SNAPSHOT_ID"] } ]
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-west-2": {
        "v0dot12dot1": "ami-0948b869"
      }
    }
  },
  "Resources": {
    "InitializationWaitConditionHandle": {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "InitializationWaitCondition": {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "Properties" : {
        "Count": "1",
        "Handle" : { "Ref": "InitializationWaitConditionHandle" },
        "Timeout" : "600"
      }
    },
    "Volume": {
      "Type":"AWS::EC2::Volume",
      "Properties" : {
        "AvailabilityZone" :  { "Ref": "AZ" },
        "Size" : { "Ref": "VolumeSize" },
        "SnapshotId": {
          "Fn::If": [ "UseSnapshotCondition", { "Ref": "Snapshot" }, { "Ref": "AWS::NoValue" } ]
        },
        "VolumeType": "gp2"
      }
    },
    "VolumeAttachment": {
      "Type":"AWS::EC2::VolumeAttachment",
      "Properties" : {
        "Device" : "/dev/xvdi",
        "InstanceId" : { "Ref": "BitcoinNode" },
        "VolumeId" : { "Ref": "Volume" }
      }
    },

    "BitcoinNodeRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "ec2.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Policies": [ {
          "PolicyName": "bitcoin-node-policy",
          "PolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [ "S3:GetObject", "S3:PutObject" ],
                "Resource": {
                  "Fn::Join": [ "", [
                    "arn:aws:s3:::blocks-",
                    { "Ref": "AWS::Region" },
                    ".strongfellow.com/",
                    { "Ref": "BitcoinNetwork" },
                    "/*"
                  ]]
                }
              },
              {
                "Effect": "Allow",
                "Action": "kinesis:Put*",
                "Resource": {
                  "Fn::Join": [ "", [
                    "arn:aws:kinesis:",
                    { "Ref": "AWS::Region" },
                    ":",
                    { "Ref": "AWS::AccountId" },
                    ":stream/transactions-",
                    { "Ref": "AWS::Region" },
                    "-",
                    { "Ref": "Stage" }
                  ]]
                }
              },
              {
                "Effect": "Allow",
                "Action": "ec2:CreateSnapshot",
                "Resource": "*"
              }
            ]
          }
        }]
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [ { "Ref": "BitcoinNodeRole" } ]
      }
    },
    "BitcoinNode": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "EdgeNode": [
              "RunBitcoind", "BackupBlocks"
            ],
            "AWSListener": [
              "RunBitcoind", "InstallStrongfellowBTC", "RunListeners"
            ],
            "Webapp": [
              "RunBitcoind",
              "InstallStrongfellowBTC",
              "InstallWebapp",
              "RunWebapp"
            ],
            "Explorer": [
              "RunBitcoind",
              "InstallStrongfellowBTC",
              "InstallExplorer",
              "RunExplorer"
            ]
          },

          "RunBitcoind": {
            "packages": {},
            "groups": {},
            "users": {
              "bitcoin": {
                "homeDir": "/data/bitcoin"
              }
            },
            "sources": {},
            "files": {
              "/data/bitcoin/.bitcoin/bitcoin.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "rpcuser=", { "Ref": "BitcoinRpcUser" },
                      "\n",
                      "rpcpassword=", { "Ref": "BitcoinRpcPassword" },
                      "\n",
                      "port=", { "Ref": "BitcoinPort" },
                      "\n",
                      "rpcport=", { "Ref": "BitcoinRpcPort" },
                      "\n",
                      "checkblocks=", { "Ref": "BitcoinCheckBlocks" },
                      "\n",
                      "\n",
                      "zmqpubhashtx=tcp://127.0.0.1:", { "Ref": "HashTxPort" },
                      "\n",
                      "zmqpubhashblock=tcp://127.0.0.1:", { "Ref": "HashBlockPort" },
                      "\n",
                      "zmqpubrawtx=tcp://127.0.0.1:", { "Ref": "RawTxPort" },
                      "\n",
                      "zmqpubrawblock=tcp://127.0.0.1:", { "Ref": "RawBlockPort" },
                      "\n"
                    ]
                  ]
                },
                "mode": "000600",
                "owner": "bitcoin",
                "group": "bitcoin"
              },
              "/etc/systemd/system/bitcoind.service": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "[Unit]",
                      "Description=Bitcoin daemon service",
                      "After=network.target",
                      "",
                      "[Service]",
                      "Type=simple",
                      "User=bitcoin",
                      "ExecStart=/usr/local/bin/bitcoind",
                      "",
                      "[Install]",
                      "WantedBy=multi-user.target",
                      ""
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              }
            },
            "commands": {
              "000_chown": {
                "command": "chown -R bitcoin:bitcoin /data/bitcoin"
              },
              "200_systemctl_enable_bitcoin": {
                "command": "systemctl enable bitcoind"
              },
              "400_systemctl_start_bitcoin": {
                "command": "systemctl start bitcoind"
              }
            },
            "services": {}
          },

          "InstallStrongfellowBTC": {
            "packages": {
              "apt": {
                "python-dev": [],
                "python-pip": []
              }
            },
            "groups": {},
            "users": {},
            "sources": {},
            "files": {},
            "commands": {
              "0000_install_deps": {
                "command": "pip install boto3 pyzmq msgpack-python"
              },

              "0200_mkdir_src": {
                "command": "mkdir -p /home/ubuntu/src"
              },

              "0400_git_clone_strongfellow": {
                "command": "git clone https://github.com/strongfellow/strongfellowbtc.git",
                "cwd": "/home/ubuntu/src"
              },

              "0600_git_checkout": {
                "command": { "Fn::Join": ["", [ "git checkout ", "master", " -b build"]]},
                "cwd": "/home/ubuntu/src/strongfellowbtc"
              },

              "0800_install_strongfellow": {
                "command": "python setup.py install",
                "cwd": "/home/ubuntu/src/strongfellowbtc"
              }
            },
            "services": {}
          },

          "RunListeners": {
            "packages": {},
            "groups": {},
            "users": {},
            "sources": {},
            "files": {
              "/etc/systemd/system/streamtx.service": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "[Unit]",
                      "Description=A service that puts transactions to kinesis",
                      "After=network.target",
                      "",
                      "[Service]",
                      "Type=simple",
                      "User=ubuntu",
                      { "Fn::Join": [" ", [
                        "ExecStart=/usr/local/bin/stream-incoming-transactions",
                        "--region", { "Ref": "AWS::Region" },
                        "--env", { "Ref": "Stage"},
                        "--host", { "Ref": "HostNickName" }]]},
                      "",
                      "[Install]",
                      "WantedBy=multi-user.target",
                      ""
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              },
              "/etc/systemd/system/stashblocks.service": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "[Unit]",
                      "Description=A service that puts blocks into s3",
                      "After=network.target",
                      "",
                      "[Service]",
                      "Type=simple",
                      "User=ubuntu",
                      { "Fn::Join": [" ", [
                        "ExecStart=/usr/local/bin/stash-incoming-blocks",
                        "--region", { "Ref": "AWS::Region" },
                        "--network", { "Ref": "BitcoinNetwork" }]]},
                      "",
                      "[Install]",
                      "WantedBy=multi-user.target",
                      ""
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              }
            },
            "commands": {
              "0000_systemctl_enable_streamtx": {
                "command": "systemctl enable streamtx"
              },
              "0200_systemctl_start_streamtx": {
                "command": "systemctl start streamtx"
              },
              "0400_systemctl_enable_stashblocks": {
                "command": "systemctl enable stashblocks"
              },
              "0600_systemctl_start_stashblocks": {
                "command": "systemctl start stashblocks"
              }
            },
            "services": {}
          },

          "InstallWebapp": {
            "packages": {
              "apt": {
                "openjdk-8-jdk": [],
                "maven": []
              }
            },
            "groups": {},
            "users": {},
            "sources": {},
            "files": {},
            "commands": {

              "0200_mkdir_src": {
                "command": "mkdir -p /home/ubuntu/src"
              },

              "0400_git_clone_transaction_streamer": {
                "command": "git clone https://github.com/strongfellow/transaction-streamer.git",
                "cwd": "/home/ubuntu/src"
              },

              "0600_git_checkout": {
                "command": { "Fn::Join": ["", [ "git checkout ", "master", " -b build"]]},
                "cwd": "/home/ubuntu/src/transaction-streamer"
              },

              "0800_mvn_package": {
                "command": "mvn clean package",
                "cwd": "/home/ubuntu/src/transaction-streamer"
              }

            },
            "services": {}
          },

          "RunWebapp": {
            "packages": {},
            "groups": {},
            "users": {},
            "sources": {},
            "files": {
              "/etc/systemd/system/webapp.service": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "[Unit]",
                      "Description=Strongfellow web application",
                      "After=network.target",
                      "",
                      "[Service]",
                      "Type=simple",
                      "User=ubuntu",
                      { "Fn::Join": [" ", [
                        "ExecStart=/usr/bin/java",
                        "-jar",
                        "/home/ubuntu/src/transaction-streamer/target/transactions-stomp-websocket-0.1.0.jar"
                        ]]
                      },
                      "",
                      "[Install]",
                      "WantedBy=multi-user.target",
                      ""
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              },
              "/etc/systemd/system/posttx.service": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "[Unit]",
                      "Description=A service posts transactions local webapp",
                      "After=network.target",
                      "",
                      "[Service]",
                      "Type=simple",
                      "User=ubuntu",
                      "ExecStart=/usr/local/bin/post-incoming-transactions",
                      "",
                      "[Install]",
                      "WantedBy=multi-user.target",
                      ""
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              }
            },
            "commands": {
              "0000_systemctl_enable_webapp": {
                "command": "systemctl enable webapp"
              },
              "0200_systemctl_start_webapp": {
                "command": "systemctl start webapp"
              },
              "0400_systemctl_enable_posttx": {
                "command": "systemctl enable posttx"
              },
              "0600_systemctl_start_posttx": {
                "command": "systemctl start posttx"
              }
            },
            "services": {}
          },


          "InstallExplorer": {
            "packages": {
              "apt": {
                "openjdk-8-jdk": [],
                "maven": []
              }
            },
            "groups": {},
            "users": {},
            "sources": {},
            "files": {},
            "commands": {

              "0200_mkdir_src": {
                "command": "mkdir -p /home/ubuntu/src"
              },

              "0400_git_clone_btcdb": {
                "command": "git clone https://github.com/strongfellow/btcdb.git",
                "cwd": "/home/ubuntu/src"
              },

              "0600_git_checkout": {
                "command": { "Fn::Join": ["", [ "git checkout ", "master", " -b build"]]},
                "cwd": "/home/ubuntu/src/btcdb"
              },

              "0800_mvn_package": {
                "command": "mvn clean package",
                "cwd": "/home/ubuntu/src/btcdb"
              }

            },
            "services": {}
          },

          "RunExplorer": {
            "packages": {},
            "groups": {},
            "users": {},
            "sources": {},
            "files": {
              "/etc/systemd/system/explorer.service": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "[Unit]",
                      "Description=Strongfellow Blockchain Explorer",
                      "After=network.target",
                      "",
                      "[Service]",
                      "Type=simple",
                      "User=ubuntu",
                      { "Fn::Join": [" ", [
                        "ExecStart=/usr/bin/java",
                        "-jar",
                        "/home/ubuntu/src/btcdb/target/btcdb-1.0-SNAPSHOT.jar"
                        ]]
                      },
                      "",
                      "[Install]",
                      "WantedBy=multi-user.target",
                      ""
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              }
            },
            "commands": {
              "0000_mkdir": {
		"command": "mkdir -p /data/explorer"
	      },
	      "0010_chown": {
		"command": "chown ubuntu:ubuntu /data/explorer"
	      },
	      "0010_chmod": {
		"command": "chmod a+rx /data/bitcoin/.bitcoin/blocks"
	      },
              "0100_systemctl_enable_explorer": {
                "command": "systemctl enable explorer"
              },
              "0200_systemctl_start_webapp": {
                "command": "systemctl start explorer"
              }
            },
            "services": {}
          },

          "BackupBlocks": {
            "packages": {
              "apt": {
                "awscli": []
              }
            },
            "groups": {},
            "users": {},
            "sources": {},
            "files": {
              "/etc/cron.hourly/snapshot": {
                "content": { "Fn::Join": ["\n", [
                  "#!/bin/bash",
                  "/usr/local/bin/snapshot",
                  ""
                ]]},
                "mode": "000755",
                "owner": "root",
                "group": "root"
              },
              "/usr/local/bin/snapshot": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "#!/bin/bash",
                      "set -e",
                      "set -x",
                      { "Fn::Join": ["", ["VOLUME=", { "Ref": "Volume" }]]},
                      "TIMESTAMP=`date +%s`",
                      { "Fn::Join": [
                        "",
                        [
                          "DESCRIPTION=block-database-",
                          { "Ref": "HostNickName" },
                          "-",
                          { "Ref": "AWS::Region" },
                          "-",
                          { "Ref": "Stage" },
                          "-`date +%Y-%m-%d-%H-%M-%S`"
                        ]
                      ]},
                      "BACKUP=backup-$TIMESTAMP",
                      "A=/data/bitcoin/.bitcoin",
                      "B=/data/bitcoin/$BACKUP",
                      "C=/tmp/$BACKUP",
                      "",
                      "systemctl stop bitcoind",
                      "mv $A $B",
                      "sudo -u bitcoin mkdir -p $A",
                      "mv $B/blocks $A",
                      "mv $B/chainstate $A",
                      "mv $B $C",
                      "",
                      "aws ec2 create-snapshot --region us-west-2 --volume-id $VOLUME --description $DESCRIPTION",
                      "",
                      "mv $C $B",
                      "mv $A/blocks $B",
                      "mv $A/chainstate $B",
                      "rm -rf $A",
                      "mv $B $A",
                      "systemctl start bitcoind",
                      ""
                    ]
                  ]
                },
                "mode": "000755",
                "owner": "root",
                "group": "root"

              }
            },
            "commands": {},
            "services": {}
          }
        }
      },
      "Properties": {
        "AvailabilityZone": { "Ref": "AZ" },
        "Tags": [
          { "Key": "Name", "Value": { "Ref": "HostNickName" } },
          { "Key": "Stage", "Value": { "Ref": "Stage" } },
          { "Key": "Network", "Value": { "Ref": "BitcoinNetwork" } }
        ],
        "IamInstanceProfile": { "Ref": "InstanceProfile" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "ImageId": { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, { "Ref": "BitcoinVersion" } ] },
        "NetworkInterfaces": [{
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet": [{ "Ref": "InstanceSecurityGroup" }],
          "SubnetId": { "Ref": "Subnet" }
        }],
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
          "#!/bin/bash\n",
          "set -e\n",
          "set -x\n",
          "apt-get update\n",

          "# install cfn tools\n",
          "apt-get -y install python-setuptools\n",
          "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",

          "# Unblock Resources Waiting for the EC2 Instance\n",
          "cfn-signal ",
          "  --exit-code $? ",
          "  --stack ", { "Ref": "AWS::StackName" },
          "  --resource BitcoinNode ",
          "  --region ", {"Ref": "AWS::Region" },
          "\n",

          "while [ ! -e /dev/xvdi ]; do echo waiting for /dev/xvdi to attach; sleep 5; done \n",
          {
            "Fn::If": [
              "UseSnapshotCondition",
              "# ",
              ""
            ]
          },
          "mkfs -t ext4 /dev/xvdi\n",
          "mkdir -p /data\n",
          "echo '/dev/xvdi       /data   ext4    defaults        0       2' >> /etc/fstab\n",
          "mount -a\n",


          "# Install application\n",
          "cfn-init ",
          "  --stack ", { "Ref": "AWS::StackId" },
          "  --resource BitcoinNode ",
          "  --configsets ", { "Ref": "Mode" },
          "  --region ", { "Ref": "AWS::Region" },
          "\n",

          "# Signal Volume Attachment\n",
          "cfn-signal --exit-code $? '", { "Ref": "InitializationWaitConditionHandle" }, "'",
          "\n"

        ]]}}
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT7M"
        }
      }
    },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "GroupDescription": { "Fn::Join": [" ", ["Enable bitcoin access to port", { "Ref": "BitcoinPort" }]]},
        "SecurityGroupIngress": [ {
          "IpProtocol": "tcp",
          "FromPort": { "Ref": "BitcoinPort" },
          "ToPort": { "Ref": "BitcoinPort" },
          "CidrIp": "0.0.0.0/0"
        } ]
      }
    }
  },

  "Outputs": {
    "InstanceId": {
      "Description": "InstanceId of the newly created EC2 instance",
      "Value": { "Ref": "BitcoinNode" }
    },
    "AZ": {
      "Description": "Availability Zone of the newly created EC2 instance",
      "Value": { "Fn::GetAtt": [ "BitcoinNode", "AvailabilityZone" ] }
    },
    "PublicDNS": {
      "Description": "Public DNSName of the newly created EC2 instance",
      "Value": { "Fn::GetAtt": [ "BitcoinNode", "PublicDnsName" ] }
    },
    "PublicIP": {
      "Description": "Public IP address of the newly created EC2 instance",
      "Value": { "Fn::GetAtt": [ "BitcoinNode", "PublicIp" ] }
    }
  }
}
